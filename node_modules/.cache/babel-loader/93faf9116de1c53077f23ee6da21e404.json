{"ast":null,"code":"var logLevel = \"info\";\n\nfunction dummy() {} // function shouldLog(level) {\n// \tvar shouldLog =\n// \t\t(logLevel === \"info\" && level === \"info\") ||\n// \t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n// \t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n// \treturn shouldLog;\n// }\n\n\nfunction logGroup(logFn) {\n  return function (level, msg) {\n    if (shouldLog(level)) {\n      logFn(msg);\n    }\n  };\n}\n\nmodule.exports = function (level, msg) {\n  if (shouldLog(level)) {\n    if (level === \"info\") {\n      console.log(msg);\n    } else if (level === \"warning\") {\n      console.warn(msg);\n    } else if (level === \"error\") {\n      console.error(msg);\n    }\n  }\n};\n/* eslint-disable node/no-unsupported-features/node-builtins */\n\n\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n  logLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n  var message = err.message;\n  var stack = err.stack;\n\n  if (!stack) {\n    return message;\n  } else if (stack.indexOf(message) < 0) {\n    return message + \"\\n\" + stack;\n  } else {\n    return stack;\n  }\n};","map":{"version":3,"sources":["/Users/aravindhsharma/Downloads/Coding/Code - 3/React - Max/Expense Tracker/node_modules/webpack/hot/log.js"],"names":["logLevel","dummy","logGroup","logFn","level","msg","shouldLog","module","exports","console","log","warn","error","group","groupCollapsed","groupEnd","setLogLevel","formatError","err","message","stack","indexOf"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,MAAf;;AAEA,SAASC,KAAT,GAAiB,CAAE,C,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,SAAO,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC3B,QAAIC,SAAS,CAACF,KAAD,CAAb,EAAsB;AACrBD,MAAAA,KAAK,CAACE,GAAD,CAAL;AACA;AACD,GAJD;AAKA;;AAEDE,MAAM,CAACC,OAAP,GAAiB,UAASJ,KAAT,EAAgBC,GAAhB,EAAqB;AACrC,MAAIC,SAAS,CAACF,KAAD,CAAb,EAAsB;AACrB,QAAIA,KAAK,KAAK,MAAd,EAAsB;AACrBK,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,KAFD,MAEO,IAAID,KAAK,KAAK,SAAd,EAAyB;AAC/BK,MAAAA,OAAO,CAACE,IAAR,CAAaN,GAAb;AACA,KAFM,MAEA,IAAID,KAAK,KAAK,OAAd,EAAuB;AAC7BK,MAAAA,OAAO,CAACG,KAAR,CAAcP,GAAd;AACA;AACD;AACD,CAVD;AAYA;;;AACA,IAAIQ,KAAK,GAAGJ,OAAO,CAACI,KAAR,IAAiBZ,KAA7B;AACA,IAAIa,cAAc,GAAGL,OAAO,CAACK,cAAR,IAA0Bb,KAA/C;AACA,IAAIc,QAAQ,GAAGN,OAAO,CAACM,QAAR,IAAoBd,KAAnC;AACA;;AAEAM,MAAM,CAACC,OAAP,CAAeK,KAAf,GAAuBX,QAAQ,CAACW,KAAD,CAA/B;AAEAN,MAAM,CAACC,OAAP,CAAeM,cAAf,GAAgCZ,QAAQ,CAACY,cAAD,CAAxC;AAEAP,MAAM,CAACC,OAAP,CAAeO,QAAf,GAA0Bb,QAAQ,CAACa,QAAD,CAAlC;;AAEAR,MAAM,CAACC,OAAP,CAAeQ,WAAf,GAA6B,UAASZ,KAAT,EAAgB;AAC5CJ,EAAAA,QAAQ,GAAGI,KAAX;AACA,CAFD;;AAIAG,MAAM,CAACC,OAAP,CAAeS,WAAf,GAA6B,UAASC,GAAT,EAAc;AAC1C,MAAIC,OAAO,GAAGD,GAAG,CAACC,OAAlB;AACA,MAAIC,KAAK,GAAGF,GAAG,CAACE,KAAhB;;AACA,MAAI,CAACA,KAAL,EAAY;AACX,WAAOD,OAAP;AACA,GAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyB,CAA7B,EAAgC;AACtC,WAAOA,OAAO,GAAG,IAAV,GAAiBC,KAAxB;AACA,GAFM,MAEA;AACN,WAAOA,KAAP;AACA;AACD,CAVD","sourcesContent":["var logLevel = \"info\";\n\nfunction dummy() {}\n\n// function shouldLog(level) {\n// \tvar shouldLog =\n// \t\t(logLevel === \"info\" && level === \"info\") ||\n// \t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n// \t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n// \treturn shouldLog;\n// }\n\nfunction logGroup(logFn) {\n\treturn function(level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function(level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function(level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function(err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}